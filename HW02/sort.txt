Begin Data Section
0 0       # program counter
1 0       # stack pointer
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0       # memory indexes 0-20 are reserved.
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0      #  Memory location  21 contains number N.  24 contains start index of the numbers to be sorted
21 100     # N=100            number N is given at memory index=21  
22 0     
23 0      
24 60      #numbers to be sorted starts at index 60
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0      # you may use locations 25 to 59 as registers
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 263    # Numbers to be sorted starts at memory index 60
61 249
62 257
63 226
64 79
65 276
66 97
67 230
68 208
69 178
70 240
71 156
72 286
73 131
74 163
75 194
76 71
77 79
78 240
79 66
80 161
81 199
82 204
83 172
84 262
85 159
86 221
87 118
88 139
89 257
90 225
91 221
92 230
93 67
94 91
95 139
96 71
97 271
98 141
99 267
100 180
101 69
102 239
103 228
104 178
105 290
106 287
107 112
108 62
109 297
110 143
111 70
112 206
113 187
114 94
115 163
116 118
117 223
118 63
119 153
120 130
121 147
122 191
123 182
124 62
125 175
126 261
127 289
128 65
129 251
130 103
131 54
132 282
133 226
134 244
135 280
136 142
137 222
138 119
139 281
140 297
141 127
142 248
143 262
144 61
145 156
146 234
147 284
148 109
149 188
150 288
151 154
152 131
153 270
154 163
155 186
156 151
157 300
158 98
159 82
End Data Section
Begin Instruction Section
0 CPY 21 30					# num of integers
1 CPY 21 31					# num of integers
2 CPY 24 32					# save starting address
3 CPY 24 33					# save starting address
4 CPY 30 34					# counter for outer loop
5 SET 0 35					# i = 0
6 CPY 24 42 				# j = 0 
7 SET 1 39
8 ADDI 35 39
9 SUBI 31 39
10 CPY 39 40
11 SET 1 43
12 ADDI 42 43 				# j + 1
13 CPYI 42 44 				# M[j]
14 CPYI 43 45 				# M[j + 1]
15 CPY 44 46 				# M[j]
16 CPY 45 47 				# M[j + 1]
17 SUBI 47 46
18 JIF 46 21
19 CPYI2 44 43 				# M[j + 1] <- M[j]
20 CPYI2 45 42 				# M[j] <- M[j + 1]
21 ADD 1 42 				# j += 1
22 SET 1 41 				# var for decr
23 SUBI 40 41 				# decrement inner counter
24 CPY 41 40 				# save updated counter
25 JIF 41 28 				# exit inner loop
26 SET 0 41
27 JIF 41 11 				# else continue with next iteration
28 ADD 1 35					# i += 1
29 SET 1 36					# var for decr
30 SUBI 34 36				# update counter for outer loop
31 CPY 36 34				# save updated counter
32 JIF 36 35				# exit outer loop
33 SET 0 37
34 JIF 37 6 				# else continue with next iteration
35 HLT
End Instruction Section

